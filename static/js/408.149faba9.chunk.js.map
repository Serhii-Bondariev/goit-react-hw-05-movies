{"version":3,"file":"static/js/408.149faba9.chunk.js","mappings":"kKAqBA,IAfoB,SAAHA,GAAuB,IAAjBC,EAASD,EAATC,UACfC,EAAaD,EAAUE,YAAW,GAAAC,OACjCC,EAAAA,GAAgB,KAAAD,OAAIH,EAAUE,aAJrC,8EAOA,OACEG,EAAAA,EAAAA,KAAA,OACEC,IAAKL,EACLM,MAAO,IAEPC,IAAI,UAGV,C,uJClBA,EAA4B,wBAA5B,EAA+D,uBAA/D,EAA+H,mBAA/H,EAA6J,uBAA7J,EAAgM,wBAAhM,EAAoO,wBAApO,EAA6Q,6B,0BC2E7Q,EAnEa,SAAHT,GAAqB,IAAfU,EAAOV,EAAPU,QACdC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA4B1B,OA1BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAU,GAAD3B,OAC3B4B,EAAAA,GAAQ,WAAA5B,OAAUM,EAAO,YAC5B,CACEuB,OAAQ,CACNC,SAAUC,EAAAA,GACVC,QAASC,EAAAA,MAGb,KAAD,EARKV,EAAQC,EAAAU,KAUdtB,EAAQW,EAASY,KAAKxB,MAAMa,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAE5Ba,QAAQC,MAAM,uBAAsBd,EAAAY,IAAS,QAE3B,OAF2BZ,EAAAC,KAAA,GAE7CT,GAAW,GAAOQ,EAAAe,OAAA,6BAAAf,EAAAgB,OAAA,GAAAlB,EAAA,wBAErB,kBAlBc,OAAAH,EAAAsB,MAAA,KAAAC,UAAA,KAoBfxB,GACF,GAAG,CAACZ,IAIAS,GACKb,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,KAIdC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,OAAK4C,UAAWC,EAAiBF,SAAC,UAClC3C,EAAAA,EAAAA,KAAA,MAAI4C,UAAWC,EAAgBF,SAC5BlC,EAAKqC,KAAI,SAAAC,GAAK,OACbL,EAAAA,EAAAA,MAAA,MAAIE,UAAWC,EAAYF,SAAA,CACxBI,EAAMC,cAAehD,EAAAA,EAAAA,KAAA,OACpB4C,UAAWC,EACXhC,QAAQ,OACRZ,IAAG,GAAAH,OAAKC,EAAAA,IAAgBD,OAAGiD,EAAMC,cACjC7C,IAAK4C,EAAME,QAGXjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAa,CAACvD,UAAWoD,KAE5BL,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAiBF,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAiBF,SAAA,CAC5B,IAAI,SAEL3C,EAAAA,EAAAA,KAAA,SAAM,IAAE+C,EAAME,SAEhBP,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAsBF,SAAA,CAAC,cAEnC3C,EAAAA,EAAAA,KAAA,SAAM,IAAE+C,EAAMI,kBAlBaJ,EAAMK,GAqBlC,QAKf,E,SCzEA,EAA6F,mCAA7F,EAAsJ,0CAAtJ,EAAkN,sCAAlN,EAA2Q,uCAA3Q,EAAqU,uCAArU,EAAod,sCAApd,EAAukB,uCAAvkB,EAAkoB,wCC2IloB,EAnIqB,WAAO,IAADC,EACjBjD,GAAYkD,EAAAA,EAAAA,MAAZlD,QACRC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CkD,EAAYhD,EAAA,GAAEiD,EAAejD,EAAA,GACpCI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxC8C,EAAQ7C,EAAA,GAAE8C,EAAW9C,EAAA,GAC5B+C,GAAsCrD,EAAAA,EAAAA,WAAS,GAAMsD,GAAApD,EAAAA,EAAAA,GAAAmD,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAWC,EAAAA,EAAAA,OAEjBjD,EAAAA,EAAAA,YAAU,WACR,IAAMkD,EAAiB,eAAAvE,GAAAwB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,GAAD3B,OAC3B4B,EAAAA,GAAQ,WAAA5B,OAAUM,GACrB,CACEuB,OAAQ,CACNC,SAAUC,EAAAA,GACVC,QAASC,EAAAA,MAGb,KAAD,EARKV,EAAQC,EAAAU,KAUdwB,EAAgBnC,EAASY,MAAMX,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAE/Ba,QAAQC,MAAM,gCAA+Bd,EAAAY,IAAS,yBAAAZ,EAAAgB,OAAA,GAAAlB,EAAA,kBAEzD,kBAhBsB,OAAA1B,EAAA6C,MAAA,KAAAC,UAAA,KAkBvByB,GACF,GAAG,CAAC7D,IAUJ,IAAKmD,EACH,OACEvD,EAAAA,EAAAA,KAAA,OAAA2C,UACE3C,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,MAKb,IAAMyB,GAAyB,QAAdb,EAAAU,EAASI,aAAK,IAAAd,OAAA,EAAdA,EAAgBe,OAAQ,UAEzC,OACE1B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,OAAA2C,UACE3C,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAACzB,UAAWC,EAAyByB,GAAIJ,EAASvB,SAAC,eAI1DD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAoBF,SAAA,EAClC3C,EAAAA,EAAAA,KAAA,OACE4C,UAAWC,EACX5C,IAAG,kCAAAH,OAAoCyD,EAAa1D,aACpDM,IAAKoD,EAAagB,SAEpBvE,EAAAA,EAAAA,KAAA,OAAA2C,UACE3C,EAAAA,EAAAA,KAAA,WAAS4C,UAAWC,EAA2BF,UAC7C3C,EAAAA,EAAAA,KAAA,MAAA2C,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGY,EAAaiB,eAAgB,IAC7BjB,EAAakB,cAAY,IAAA3E,OACpByD,EAAakB,aAAaC,MAAM,EAAG,GAAE,SAE7ChC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,QAAM4C,UAAWC,EAAwBF,SAAC,MAAS,IAClDY,EAAakB,aAAc,QAE9BzE,EAAAA,EAAAA,KAAA,QAAA2C,UACE3C,EAAAA,EAAAA,KAAA,QAAM4C,UAAWC,EAAwBF,SAAC,QACpC,IACPY,EAAaoB,OAAO7B,KAAI,SAAA8B,GAAK,OAAIA,EAAM3B,IAAI,IAAE4B,KAAK,MAAO,KAC1DnC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACG,KACD3C,EAAAA,EAAAA,KAAA,QAAM4C,UAAWC,EAAwBF,SAAC,MAAS,IAAG,GAAA7C,OAClDgF,KAAKC,MAAMxB,EAAayB,QAAU,IAAG,MAAAlF,OACvCyD,EAAayB,QAAU,GAAE,KACtB,WAGThF,EAAAA,EAAAA,KAAA,MAAA2C,SAAKY,EAAa0B,WAIlBvC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,MAAA2C,SAAI,YAAY,IAAEY,EAAa2B,aAAaC,QAAQ,OAEtDzC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,MAAA2C,SAAI,cAAc,IAAEY,EAAa6B,aAEnCpF,EAAAA,EAAAA,KAAA,MAAA2C,SAAI,iBACrBY,EAAa8B,qBAAqBvC,KAAI,SAACwC,GAAO,OAC7CA,EAAQC,YACNvF,EAAAA,EAAAA,KAAA,OAEE4C,UAAWC,EACX5C,IAAG,kCAAAH,OAAoCwF,EAAQC,WAC/CpF,IAAKmF,EAAQrC,MAHRqC,EAAQlC,GAKhB,iBASKV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,KAAG4C,UAAWC,EAAyBF,SAAC,4BACxCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGc,IAAYzD,EAAAA,EAAAA,KAACwF,EAAI,CAACpF,QAASA,IAC3ByD,IAAe7D,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CAACrF,QAASA,KAClCsC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3C,EAAAA,EAAAA,KAAA,UAAQ4C,UAAWC,EAAwB6C,KAAK,SAASC,QA5FlD,WACjBjC,GAAaD,EACf,EA0FyFd,SAAC,UAC9E3C,EAAAA,EAAAA,KAAA,UAAQ4C,UAAWC,EAAwB6C,KAAK,SAASC,QAzF/C,WACpB7B,GAAgBD,EAClB,EAuF4FlB,SAAC,0BAO/F,C","sources":["components/DefaultPoster/DefaultPoster.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { MOVIE_POSTER_URL } from 'components/constants/Api';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MoviePoster = ({ movieData }) => {\n  const posterPath = movieData.poster_path\n    ? `${MOVIE_POSTER_URL}/${movieData.poster_path}`\n    : defaultImg;\n\n  return (\n    <img\n      src={posterPath}\n      width={250}\n      \n      alt=\"poster\"\n    />\n  );\n};\n\nexport default MoviePoster;","// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"Cast_castTitle__cJi1i\",\"castList\":\"Cast_castList__hbalY\",\"castLink\":\"Cast_castLink__nCJaJ\",\"card\":\"Cast_card__ud29m\",\"actorImg\":\"Cast_actorImg__YIxqD\",\"actorInfo\":\"Cast_actorInfo__PujSu\",\"actorName\":\"Cast_actorName__JhfgR\",\"actorCharacter\":\"Cast_actorCharacter__HJVlq\"};","// Cast.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Loader from '../../components/Loader/Loader';\n// import { Link } from 'react-router-dom';\nimport styles from './Cast.module.css';\nimport DefaultPoster from '../../components/DefaultPoster/DefaultPoster';\nimport { BASE_URL, API_KEY,MOVIE_POSTER_URL,BASE_LANG } from 'components/constants/Api';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}/credits`,\n          {\n            params: {\n              language: BASE_LANG,\n              api_key: API_KEY,\n            },\n          }\n        );\n\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  // const limitedCast = cast.slice(0, 5);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <div className={styles.castTitle}>Cast</div>\n      <ul className={styles.castList}>\n        {cast.map(actor => (\n          <li className={styles.card} key={actor.id}>\n            {actor.profile_path ? <img\n              className={styles.actorImg}\n              loading=\"lazy\"\n              src={`${MOVIE_POSTER_URL}${actor.profile_path}`}\n              alt={actor.name}\n            /> \n              :\n              <DefaultPoster movieData={actor} />\n            }\n            <div className={styles.actorInfo}>\n              <p className={styles.actorName}>\n                {' '}\n                Name:\n                <br /> {actor.name}\n              </p>\n              <p className={styles.actorCharacter}>\n                Character:\n                <br /> {actor.character}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"movie_details_logo\":\"MovieDetails_movie_details_logo__ropF8\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDetailsSection\":\"MovieDetails_movieDetailsSection__P4-Qq\",\"movieDetailsImg\":\"MovieDetails_movieDetailsImg__mJ0ic\",\"MovieDetailslink\":\"MovieDetails_MovieDetailslink__qeINb\",\"movieDetailsSpan\":\"MovieDetails_movieDetailsSpan__T3mXR\",\"genreSpan\":\"MovieDetails_genreSpan__OHyzp\",\"timeSpan\":\"MovieDetails_timeSpan__xFdJi\",\"movieDetailsBtn\":\"MovieDetails_movieDetailsBtn__kML+H\",\"movieDetailsText\":\"MovieDetails_movieDetailsText__HE9cS\",\"movieDetailsLogo\":\"MovieDetails_movieDetailsLogo__7lKEw\",\"movieDetailsTitle\":\"MovieDetails_movieDetailsTitle__3itYh\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport styles from './MovieDetails.module.css';\nimport { BASE_URL, API_KEY, BASE_LANG } from 'components/constants/Api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}`,\n          {\n            params: {\n              language: BASE_LANG,\n              api_key: API_KEY,\n            },\n          }\n        );\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n  };\n\n  if (!movieDetails) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n\n  const backLink = location.state?.from || '/movies';\n\n  return (\n    <div>\n      <div>\n        <Link className={styles.MovieDetailslink} to={backLink}>\n          GO BACK\n        </Link>\n      </div>\n      <div>\n        <div className={styles.movieDetails}>\n          <img\n            className={styles.movieDetailsImg}\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <div>\n            <section className={styles.movieDetailsSection}>\n              <ul>\n                <li>\n                  <h2>\n                    {movieDetails.original_title}{' '}\n                    {movieDetails.release_date &&\n                      `(${movieDetails.release_date.slice(0, 4)})`}\n                  </h2>\n                  <div>\n                    <span>\n                      <span className={styles.movieDetailsSpan}>R</span>{' '}\n                      {movieDetails.release_date}{' '}\n                    </span>\n                    <span>\n                      <span className={styles.movieDetailsSpan}>G</span>\n                    </span>{' '}\n                    {movieDetails.genres.map(genre => genre.name).join(', ')}{' '}\n                    <span>\n                      {' '}\n                      <span className={styles.movieDetailsSpan}>T</span>{' '}\n                      {`${Math.floor(movieDetails.runtime / 60)}h ${\n                        movieDetails.runtime % 60\n                      }m`}{' '}\n                    </span>\n                  </div>\n                  <h4>{movieDetails.tagline}</h4>\n\n\n\n                  <div>\n                    <h4>Rating:</h4> {movieDetails.vote_average.toFixed(1)}\n                  </div>\n                  <div>\n                    <h4>Overview:</h4> {movieDetails.overview}\n                  </div>\n                  <h4>Production: </h4>\n{movieDetails.production_companies.map((company) => (\n  company.logo_path && (\n    <img\n      key={company.id} \n      className={styles.movieDetailsLogo}\n      src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\n      alt={company.name}\n    />\n  )\n))}\n\n                </li>\n              </ul>\n            </section>\n          </div>\n        </div>\n\n        <div>\n          <p className={styles.movieDetailsTitle}>Additional information</p>\n          <div>\n            {showCast && <Cast movieId={movieId} />}\n            {showReviews && <Reviews movieId={movieId} />}\n            <nav>\n              <button className={styles.movieDetailsBtn} type=\"button\" onClick={toggleCast}>Cast</button>\n              <button className={styles.movieDetailsBtn} type=\"button\" onClick={toggleReviews}>Reviews</button>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["_ref","movieData","posterPath","poster_path","concat","MOVIE_POSTER_URL","_jsx","src","width","alt","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","BASE_URL","params","language","BASE_LANG","api_key","API_KEY","sent","data","t0","console","error","finish","stop","apply","arguments","Loader","_jsxs","children","className","styles","map","actor","profile_path","name","DefaultPoster","character","id","_location$state","useParams","movieDetails","setMovieDetails","showCast","setShowCast","_useState5","_useState6","showReviews","setShowReviews","location","useLocation","fetchMovieDetails","backLink","state","from","Link","to","title","original_title","release_date","slice","genres","genre","join","Math","floor","runtime","tagline","vote_average","toFixed","overview","production_companies","company","logo_path","Cast","Reviews","type","onClick"],"sourceRoot":""}